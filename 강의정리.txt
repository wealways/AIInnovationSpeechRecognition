7/25 
도커이미지 pull하는 법 배움. 
내꺼 깃을 clone해와서 자료정리를 깔끔하게 하는 법을 배웠다. docker exec -it 이미지아이디 /bin/bash       git clone ~~
빈도수 기반으로 vocab_dict을 구현했어 강사님은. 근데 이건 그냥 옵션이야. 하고싶은대로 하면 돼 ! 

카카오 AI 챗봇 대중화
https://news.naver.com/main/read.nhn?mode=LSD&mid=shm&sid1=105&oid=031&aid=0000502566

np.roll 이게 매트릭스 한칸씩 밀어주는기능있어. 행방향또는 열방향으로


7/26
인코더의 끝부분의 state_h, state_c 이것만 지금 예제 모델에서 쓰고 있어. 그런데 사실 마지막 state만 쓰는거 말고 다른거 써도 돼.
마지막state만 쓰는거, 정해놓은 벡터에 정보를 다 쑤셔 넣어서 별로인거 같아. 
그래서 time이 바뀔때마다의 context 벡터 정보들을 사용하기로 했어 (어텐션 이라는 걸 활용해서)
디코더 부분도 학습할 때, 각각의 상태가 끊어져있다고 보고 t=1에서 나온 정보와 트레인데이터를 함꼐 입력으로 넣어서 


7/29

* 한국어 입력을 위한 locale 설정
(Root 계정으로 수행)
>> apt-get install language-pack-ko
>> locale-gen ko_KR.UTF-8

리눅스 조심해야할것! , root계정으로 작업하면 위험할 수 있어!!! 그래서 계정을 하나 새로 만들어서 작업을 할 예정이야
만드는 법 >> adduser sj     //    새 계정 접속 >> su sj   //  cd~ 워킹디렉토리 처음화면

(User 계정으로 수행)
>> export LC_ALL=ko_KR.UTF-8
>> export LANG=ko_KR.UTF-8

locale 이걸로 확인

-----------------------
bash명령어

echo "hello world"  // 파이썬에서 print()
pwd // printworkingdirectory
ls -al  // 현재 디렉토리 파일 목록을 확인
mkdir test  // test디렉토리 생성
vim  // 텍스트 파일 생성하는거
>> vim test.py
>> print(“123”)
중간에 esc 눌러주는거 필수!
>>:wq

cat  //  안에 있는 내용 출력!
]]  // 맨 뒤로 보내기
cp test.py test2.py  //  파일 복사하기
mv tes2.py print.py  //  파일명 변경하기
q  //  환경나가기
find ./wav/*.wav  // wav폴더 안의 .wav 파일 다 찾기
find ./wav/*.wav > wav_list.txt  // wav 파일 찾은것들 파일명 리스트만들기
find ./wav/*.wav >> wav_list.txt  // wav 파일 찾은것들 파일명 리스트에 추가


----------------------------------

.bashrc 수정해서 한글 계속 쓸 수 있게 만들기
vim .bashrc
insert키 누른 후
>> export LC_ALL=ko_KR.UTF-8
>> export LANG=ko_KR.UTF-8
:wq

-------------------------------
shell script 작성해서 쉽게 사용할 수 있어,,


7/30
구글 ( kaldi asr , kaldi openslr )
voice.mozilla.org // 음성데이터 무료제공 !

도커 칼디 컨테이너에 압축파일 올리기
docker cp D:\data\librispeech_corpus.tar.gz kaldi:/usr/local/kaldi/egs/librispeech/s5/
mv kaldi /home/sj
cd /usr/local/
mkdir kaldi
cd kaldi/
mkdir src
권한부여
cd /home/sj
chown -R sj:sj kaldi
내꺼 계정가서 이제 사용하기
tar xvfz librispeech_lm.tar.gz
tar xvfz librispeech_corpus.tar.gz
chown sj:sj run.lecture.sh

vim cmd.sh
run.pl 이걸로 다 바꿔주기
vim run.lecture.sh
stage=1로바꾸기

root에서 apt-get install flac ffmpeg

./run.lecture.sh 실행


========================================
7/31 
도커 kaldi 이거 지금까지 한거 문제가 있었어. 그래서 고칠 예정
mv kaldi ..
chown -R sj:sj /usr/local/kaldi
(sj에 있는 kaldi를 root로 옮겨준후, root에서 권한을 sj에게 주는 걸로 바꾸기)

su sj 이걸로 가서
여기에 kaldi 바로가기 디렉토리하나 만들어주기
>> ln -s /usr/local/kaldi kaldi

vim .bashsr 
마지막에 export libri=~/kaldi/egs/librispeech/s5 이거 만들어주기!
source ~/.bashrc
cd $libri/

time ./run.lecture.sh  


==========================================

